{"version":3,"file":"static/chunks/pages/register-2c8a39ff56808f85.js","mappings":"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","sources":["webpack://_N_E/?bfa2","webpack://_N_E/./src/components/header.js","webpack://_N_E/./src/hooks/useInput.js","webpack://_N_E/./src/pages/register.js","webpack://_N_E/./src/pages/register.result.js","webpack://_N_E/./src/components/css/Header.module.css","webpack://_N_E/./src/components/css/User.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/register\",\n      function () {\n        return require(\"private-next-pages/register.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/register\"])\n      });\n    }\n  ","import React, { useState,useCallback,useEffect } from 'react'\r\nimport { Container,Navbar,Nav,NavDropdown } from \"react-bootstrap\";\r\nimport styles from './css/Header.module.css'\r\nimport AuthService from '../../service/user/Auth.service';\r\nimport Router from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_OUT_REQUEST } from '../reducers/user';\r\n\r\n\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [admin, setAdmin ]  = useState(false);\r\n  const [currentUser, setCurrentUser ]  = useState(false);\r\n\r\n  useEffect(() => {\r\n    const admin = AuthService.getCurrentUser();\r\n    \r\n    if(admin) {\r\n      setCurrentUser(true)\r\n      if(admin.roles[0] === 'ROLE_ADMIN') {\r\n        setAdmin(true)\r\n      }\r\n    }\r\n  })\r\n\r\n  const showDropdown = useCallback(() => {\r\n    setShow(true)\r\n  },[show]);\r\n  const hideDropdown = useCallback(() => {\r\n    setShow(false)\r\n  },[show]);\r\n  \r\n\r\n  const logOut = useCallback(() => {\r\n    AuthService.logout();\r\n    dispatch({\r\n      type: LOG_OUT_REQUEST\r\n    })\r\n    setCurrentUser(false)\r\n    Router.push(\"/\")\r\n  }, []);\r\n\r\n  const login = useCallback(() => {\r\n    Router.push(\"login\")\r\n  },[]);\r\n\r\n  return (\r\n     <Navbar  expand=\"lg\"  >\r\n        <Container className={styles.headerLayout}>\r\n          <Navbar.Brand href=\"/\" className={styles.headerColor}>COOR</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n            <Nav className=\"ms-auto\" >\r\n              {\r\n                admin && (\r\n                  <Nav.Link href=\"addItem\" id={styles.navLink}>등록하기</Nav.Link>\r\n                )\r\n              }\r\n              <NavDropdown \r\n                title=\"Store\" \r\n                id={styles.dropdownMenu}\r\n                show={show}\r\n                onMouseEnter={showDropdown} \r\n                onMouseLeave={hideDropdown}\r\n              >\r\n                <NavDropdown.Item href=\"addItem\" id={styles.dropdownMenuItem}>New arrivals</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\" id={styles.dropdownMenuItem}>Outwear</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\"id={styles.dropdownMenuItem}>Knitwear</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>Sweatshirt</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>Shirt</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>T-shirt</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"help\" id={styles.navLink}>help</Nav.Link>\r\n              <Nav.Link href=\"register\" id={styles.navLink}>cart</Nav.Link>\r\n              {\r\n                currentUser ? (\r\n                  <Nav.Link id={styles.navLink} onClick={logOut}>LogOut</Nav.Link>\r\n                ) : (\r\n                  <Nav.Link id={styles.navLink} onClick={login}>login</Nav.Link>\r\n                )\r\n              }\r\n              \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n          </Container>\r\n      </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n// export default class Header extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       show: false,\r\n//       currentUser: '',\r\n//       showAdminBoard: false,\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const user = AuthService.getCurrentUser();\r\n//     if(user) {\r\n//       this.setState({ \r\n//         currentUser: user,\r\n//         showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n//        })\r\n//     }\r\n//   }\r\n\r\n//   showDropdown = () => {\r\n//     this.setState({ show: true})\r\n//   }\r\n//   hideDropdown = () => {\r\n//     this.setState({ show: false})\r\n//   }\r\n//   logOut = () => {\r\n//     AuthService.logout();\r\n//     this.setState({\r\n//       showAdminBoard: false,\r\n//       currentUser: undefined,\r\n//     });\r\n//     Router.push(\"/\")\r\n//   }\r\n\r\n//   login = () => {\r\n//     Router.push(\"login\")\r\n//   }\r\n\r\n//   render() {\r\n//     const { show,currentUser, showAdminBoard } = this.state;\r\n//     return (\r\n//      <Navbar  expand=\"lg\"  >\r\n//         <Container className={styles.headerLayout}>\r\n//           <Navbar.Brand href=\"/\" className={styles.headerColor}>COOR</Navbar.Brand>\r\n//           <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n//           <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n//             <Nav className=\"ms-auto\" >\r\n//               {\r\n//                 showAdminBoard && (\r\n//                   <Nav.Link href=\"addCloth\" id={styles.navLink}>등록하기</Nav.Link>\r\n//                 )\r\n//               }\r\n//               <NavDropdown \r\n//                 title=\"Store\" \r\n//                 id={styles.dropdownMenu}\r\n//                 show={show}\r\n//                 onMouseEnter={this.showDropdown} \r\n//                 onMouseLeave={this.hideDropdown}\r\n//               >\r\n//                 <NavDropdown.Item href=\"allCloth\" id={styles.dropdownMenuItem}>New arrivals</NavDropdown.Item>\r\n//                 <NavDropdown.Item href=\"#action/3.2\" id={styles.dropdownMenuItem}>Outwear</NavDropdown.Item>\r\n//                 <NavDropdown.Item href=\"#action/3.3\"id={styles.dropdownMenuItem}>Knitwear</NavDropdown.Item>\r\n//                 <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>Sweatshirt</NavDropdown.Item>\r\n//                 <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>Shirt</NavDropdown.Item>\r\n//                 <NavDropdown.Item href=\"#action/3.4\" id={styles.dropdownMenuItem}>T-shirt</NavDropdown.Item>\r\n//               </NavDropdown>\r\n//               <Nav.Link href=\"help\" id={styles.navLink}>help</Nav.Link>\r\n//               <Nav.Link href=\"register\" id={styles.navLink}>cart</Nav.Link>\r\n//               {\r\n//                 currentUser ? (\r\n//                   <Nav.Link id={styles.navLink} onClick={this.logOut}>LogOut</Nav.Link>\r\n//                 ) : (\r\n//                   <Nav.Link id={styles.navLink} onClick={this.login}>login</Nav.Link>\r\n//                 )\r\n//               }\r\n              \r\n//             </Nav>\r\n//           </Navbar.Collapse>\r\n//           </Container>\r\n//       </Navbar>\r\n//     )\r\n//   }\r\n// }\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport default (initialValue = null) => {\r\n  const [value ,setValue] = useState(initialValue);\r\n  const handler = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n  return [value, handler, setValue];\r\n};","import React, { useState, useCallback,useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Header from '../components/header'\r\nimport AuthService from \"../../service/user/Auth.service\";\r\nimport styles from '../components/css/User.module.css'\r\nimport Router from \"next/router\";\r\nimport Register_result from \"./register.result\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SIGNUP_REQUEST } from \"../reducers/user\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        입력해주세요.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vemail = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        유효하지 않는 이메일입니다.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        아이디는 영문소문자 또는 숫자 4~20자로 입력해 주세요.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 16) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        비밀번호는 영문소문자 또는 숫자 4~16자로 입력해 주세요.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () => {\r\n  const form =useRef(null);\r\n  const checkBtn =useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const [username, onChangeUsername] = useInput('');\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const [passwordCheck, setPasswordCheck] =useState('')\r\n  const [passwordError, setPasswordError] =useState(false)\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordCheck(e.target.value)\r\n    setPasswordError(e.target.value !== password)\r\n  }, [password])\r\n\r\n\r\n  const handleRegister = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password !== passwordCheck) {\r\n          return setPasswordError(true)\r\n        }\r\n   \r\n        form.validateAll();\r\n\r\n        if (checkBtn.context._errors.length === 0) {   // 서버보다 우선순위 먼저\r\n          AuthService.register(username,email,password)\r\n          .then(res => {\r\n            dispatch({\r\n              type: SIGNUP_REQUEST,\r\n              data: { username, email }\r\n            });\r\n              Router.push({\r\n                pathname: \"/register.result\",\r\n                query: {username: username, email: email}\r\n              }, \"/register.result\")\r\n    \r\n            },\r\n            error => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n    \r\n              alert(resMessage)\r\n            }\r\n          );\r\n        }\r\n      },[username,email,password,passwordCheck]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\" id={styles.login_form_layout}>\r\n        <label className={styles.login_font_title}>Register</label>\r\n        <br />\r\n        <br />\r\n          <Form\r\n            onSubmit={handleRegister}\r\n            ref={c => {\r\n              form = c;\r\n            }}\r\n          >\r\n              <div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"username\" className={styles.login_font_input}>USERNAME</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className={styles.login_font_input}>EAMIL</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={onChangeEmail}\r\n                    validations={[required, vemail]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"Password\" className={styles.login_font_input}>PASSWORD</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"PasswordCheck\" className={styles.login_font_input}>PASSWORD CHECK</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"passwordCheck\"\r\n                    value={passwordCheck}\r\n                    onChange={onChangePasswordCheck}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n                { passwordError && <p style={{'color':'red'}}>비밀번호가 일치하지 않습니다.</p> }\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n\r\n","import React, { useState,useCallback  } from 'react'\r\nimport Header from '../components/header'\r\nimport styles from '../components/css/User.module.css'\r\nimport AuthService from '../../service/user/Auth.service'\r\nimport Router from 'next/router'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Register_result = () =>  {\r\n  const { username, email } = useSelector((state) => state.user);\r\n\r\n\r\n  const handleComplete = useCallback(() => {\r\n      Router.push(\"/login\")\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n        <Header />\r\n            <div className=\"col-md-12\">\r\n            <div className=\"card card-container\" id={styles.login_form_layout}>\r\n            <label className={styles.login_font_title}>회원가입</label>\r\n            <br />\r\n            <br />\r\n                <div>\r\n                    <div className='form-group'>\r\n                        <label className={styles.register_font_input}>회원가입이 완료되었습니다.</label>\r\n                        <label className={styles.register_font_input}>저의 쇼핑몰을 이용해 주셔서 감사합니다.</label>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\" className={styles.login_font_input}>아이디 : {username} </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"Password\" className={styles.login_font_input}>이메일 : {email} </label>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-primary btn-block\" type=\"submit\" onClick={handleComplete}>완료</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Register_result;\r\n\r\n// class Register_result extends Component {\r\n//   constructor(props) {\r\n//       super(props);\r\n//       this.state = {\r\n//         username: this.props.router.query.username,\r\n//         email: this.props.router.query.email\r\n//       }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//       const user = AuthService.getCurrentUser();\r\n//       if(user) {\r\n//           Router.push(\"/\")\r\n//       }\r\n//   }\r\n\r\n//   handleComplete = () => {\r\n//       Router.push(\"/login\")\r\n//   }\r\n\r\n//   render() {\r\n//     const { username, email } = this.state;\r\n//     return (\r\n//       <>\r\n//         <Header />\r\n//             <div className=\"col-md-12\">\r\n//             <div className=\"card card-container\">\r\n//             <label className={styles.login_font_title}>회원가입</label>\r\n//             <br />\r\n//             <br />\r\n//                 <div>\r\n//                     <div className='form-group'>\r\n//                         <label className={styles.register_font_input}>회원가입이 완료되었습니다.</label>\r\n//                         <label className={styles.register_font_input}>저의 쇼핑몰을 이용해 주셔서 감사합니다.</label>\r\n//                     </div>\r\n//                     <br />\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"username\" className={styles.login_font_input}>아이디 : {username} </label>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label htmlFor=\"Password\" className={styles.login_font_input}>이메일 : {email} </label>\r\n//                     </div>\r\n//                     <br />\r\n//                     <br />\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <button className=\"btn btn-primary btn-block\" type=\"submit\" onClick={this.handleComplete}>완료</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default withRouter(Register_result)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerColor\":\"Header_headerColor__mXmDj\",\"headerLayout\":\"Header_headerLayout__Pt4Gx\",\"navLink\":\"Header_navLink__Uof5x\",\"dropdownMenu\":\"Header_dropdownMenu__DtDIk\",\"dropdownMenuItem\":\"Header_dropdownMenuItem__0sT0o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_font_title\":\"User_login_font_title__AbGou\",\"login_font_input\":\"User_login_font_input__bN1AP\",\"login_account_layout\":\"User_login_account_layout__1Q__9\",\"login_account_font_label\":\"User_login_account_font_label__LFmT0\",\"login_account_font_a\":\"User_login_account_font_a__dHgCz\",\"register_font_input\":\"User_register_font_input__UdLGR\",\"add_cloth_cotainer\":\"User_add_cloth_cotainer__f85Kk\",\"login_form_layout\":\"User_login_form_layout__7_0P6\",\"textarea_form_control\":\"User_textarea_form_control__D5zRp\"};"],"names":["window","__NEXT_P","push","dispatch","useDispatch","useState","useEffect","admin","AuthService","setCurrentUser","roles","setAdmin","showDropdown","useCallback","setShow","show","hideDropdown","logOut","type","LOG_OUT_REQUEST","Router","login","Navbar","expand","Container","className","styles","href","aria-controls","id","Nav","NavDropdown","title","onMouseEnter","onMouseLeave","currentUser","onClick","initialValue","handler","e","setValue","target","value","required","div","role","vemail","isEmail","vusername","length","vpassword","form","useRef","checkBtn","useInput","username","onChangeUsername","email","onChangeEmail","password","onChangePassword","onChangePasswordCheck","setPasswordCheck","setPasswordError","handleRegister","preventDefault","passwordCheck","validateAll","context","_errors","then","res","SIGNUP_REQUEST","data","pathname","query","error","resMessage","response","message","toString","alert","Header","label","br","Form","onSubmit","ref","c","htmlFor","Input","name","onChange","validations","passwordError","p","style","button","CheckButton","display","useSelector","state","user","handleComplete","module","exports"],"sourceRoot":""}