{"ast":null,"code":"// import React, { Component } from \"react\";\n// import Form from \"react-validation/build/form\";\n// import Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\n// import { isEmail } from \"validator\";\n// import Header from '../components/header'\n// import AuthService from \"../../service/Auth.service\";\n// const required = value => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n// const email = value => {\n//   if (!isEmail(value)) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This is not a valid email.\n//       </div>\n//     );\n//   }\n// };\n// const vusername = value => {\n//   if (value.length < 3 || value.length > 20) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The username must be between 3 and 20 characters.\n//       </div>\n//     );\n//   }\n// };\n// const vpassword = value => {\n//   if (value.length < 6 || value.length > 40) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         The password must be between 6 and 40 characters.\n//       </div>\n//     );\n//   }\n// };\n// export default class Register extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleRegister = this.handleRegister.bind(this);\n//     this.onChangeUsername = this.onChangeUsername.bind(this);\n//     this.onChangeEmail = this.onChangeEmail.bind(this);\n//     this.onChangePassword = this.onChangePassword.bind(this);\n//     this.state = {\n//       username: \"\",\n//       email: \"\",\n//       password: \"\",\n//       successful: false,\n//       message: \"\"\n//     };\n//   }\n//   onChangeUsername(e) {\n//     this.setState({\n//       username: e.target.value\n//     });\n//   }\n//   onChangeEmail(e) {\n//     this.setState({\n//       email: e.target.value\n//     });\n//   }\n//   onChangePassword(e) {\n//     this.setState({\n//       password: e.target.value\n//     });\n//   }\n//   handleRegister(e) {\n//     e.preventDefault();\n//     this.setState({\n//       message: \"\",\n//       successful: false\n//     });\n//     this.form.validateAll();\n//     if (this.checkBtn.context._errors.length === 0) {  // 0은 id,email,pw다 올바르게 입력했을때 , 서버보다 우선순위 먼저\n//       AuthService.register(   // body 역할\n//         this.state.username,\n//         this.state.email,\n//         this.state.password\n//       ).then(\n//         response => {\n//           this.setState({\n//             message: response.data.message,\n//             successful: true\n//           });\n//         },\n//         error => {\n//           const resMessage =\n//             (error.response &&\n//               error.response.data &&\n//               error.response.data.message) ||\n//             error.message ||\n//             error.toString();\n//           this.setState({\n//             successful: false,\n//             message: resMessage\n//           });\n//         }\n//       );\n//     }\n//   }\n//   render() {\n//     console.log(this.state.message);\n//     return (\n//       <>\n//       <Header />\n//       <div className=\"col-md-12\">\n//         <div className=\"card card-container\">\n//           <img\n//             src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n//             alt=\"profile-img\"\n//             className=\"profile-img-card\"\n//           />\n//           <Form\n//             onSubmit={this.handleRegister}\n//             ref={c => {\n//               this.form = c;\n//             }}\n//           >\n//             {!this.state.successful && (\n//               <div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"username\">Username</label>\n//                   <Input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     name=\"username\"\n//                     value={this.state.username}\n//                     onChange={this.onChangeUsername}\n//                     validations={[required, vusername]}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"email\">Email</label>\n//                   <Input\n//                     type=\"text\"\n//                     className=\"form-control\"\n//                     name=\"email\"\n//                     value={this.state.email}\n//                     onChange={this.onChangeEmail}\n//                     validations={[required, email]}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"password\">Password</label>\n//                   <Input\n//                     type=\"password\"\n//                     className=\"form-control\"\n//                     name=\"password\"\n//                     value={this.state.password}\n//                     onChange={this.onChangePassword}\n//                     validations={[required, vpassword]}\n//                   />\n//                 </div>\n//                 <div className=\"form-group\">\n//                   <button className=\"btn btn-primary btn-block\">Sign Up</button>\n//                 </div>\n//               </div>\n//             )}\n//             {this.state.message && (\n//               <div className=\"form-group\">\n//                 <div\n//                   className={\n//                     this.state.successful\n//                       ? \"alert alert-success\"\n//                       : \"alert alert-danger\"\n//                   }\n//                   role=\"alert\"\n//                 >\n//                   {this.state.message}\n//                 </div>\n//               </div>\n//             )}\n//             <CheckButton\n//               style={{ display: \"none\" }}\n//               ref={c => {\n//                 this.checkBtn = c;\n//               }}\n//             />\n//           </Form>\n//         </div>\n//       </div>\n//       </>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/user/Downloads/shopping-front/src/pages/register.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\r\n// import Form from \"react-validation/build/form\";\r\n// import Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import { isEmail } from \"validator\";\r\n// import Header from '../components/header'\r\n// import AuthService from \"../../service/Auth.service\";\r\n\r\n// const required = value => {\r\n//   if (!value) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         This field is required!\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// const email = value => {\r\n//   if (!isEmail(value)) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         This is not a valid email.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// const vusername = value => {\r\n//   if (value.length < 3 || value.length > 20) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         The username must be between 3 and 20 characters.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//   if (value.length < 6 || value.length > 40) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         The password must be between 6 and 40 characters.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n// export default class Register extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.handleRegister = this.handleRegister.bind(this);\r\n//     this.onChangeUsername = this.onChangeUsername.bind(this);\r\n//     this.onChangeEmail = this.onChangeEmail.bind(this);\r\n//     this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n//     this.state = {\r\n//       username: \"\",\r\n//       email: \"\",\r\n//       password: \"\",\r\n//       successful: false,\r\n//       message: \"\"\r\n//     };\r\n//   }\r\n\r\n//   onChangeUsername(e) {\r\n//     this.setState({\r\n//       username: e.target.value\r\n//     });\r\n//   }\r\n\r\n//   onChangeEmail(e) {\r\n//     this.setState({\r\n//       email: e.target.value\r\n//     });\r\n//   }\r\n\r\n//   onChangePassword(e) {\r\n//     this.setState({\r\n//       password: e.target.value\r\n//     });\r\n//   }\r\n\r\n//   handleRegister(e) {\r\n//     e.preventDefault();\r\n\r\n//     this.setState({\r\n//       message: \"\",\r\n//       successful: false\r\n//     });\r\n\r\n//     this.form.validateAll();\r\n\r\n//     if (this.checkBtn.context._errors.length === 0) {  // 0은 id,email,pw다 올바르게 입력했을때 , 서버보다 우선순위 먼저\r\n//       AuthService.register(   // body 역할\r\n//         this.state.username,\r\n//         this.state.email,\r\n//         this.state.password\r\n//       ).then(\r\n//         response => {\r\n//           this.setState({\r\n//             message: response.data.message,\r\n//             successful: true\r\n//           });\r\n//         },\r\n//         error => {\r\n//           const resMessage =\r\n//             (error.response &&\r\n//               error.response.data &&\r\n//               error.response.data.message) ||\r\n//             error.message ||\r\n//             error.toString();\r\n\r\n//           this.setState({\r\n//             successful: false,\r\n//             message: resMessage\r\n//           });\r\n//         }\r\n//       );\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     console.log(this.state.message);\r\n//     return (\r\n//       <>\r\n//       <Header />\r\n//       <div className=\"col-md-12\">\r\n//         <div className=\"card card-container\">\r\n//           <img\r\n//             src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n//             alt=\"profile-img\"\r\n//             className=\"profile-img-card\"\r\n//           />\r\n\r\n//           <Form\r\n//             onSubmit={this.handleRegister}\r\n//             ref={c => {\r\n//               this.form = c;\r\n//             }}\r\n//           >\r\n//             {!this.state.successful && (\r\n//               <div>\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"username\">Username</label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     className=\"form-control\"\r\n//                     name=\"username\"\r\n//                     value={this.state.username}\r\n//                     onChange={this.onChangeUsername}\r\n//                     validations={[required, vusername]}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"email\">Email</label>\r\n//                   <Input\r\n//                     type=\"text\"\r\n//                     className=\"form-control\"\r\n//                     name=\"email\"\r\n//                     value={this.state.email}\r\n//                     onChange={this.onChangeEmail}\r\n//                     validations={[required, email]}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                   <label htmlFor=\"password\">Password</label>\r\n//                   <Input\r\n//                     type=\"password\"\r\n//                     className=\"form-control\"\r\n//                     name=\"password\"\r\n//                     value={this.state.password}\r\n//                     onChange={this.onChangePassword}\r\n//                     validations={[required, vpassword]}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                   <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             {this.state.message && (\r\n//               <div className=\"form-group\">\r\n//                 <div\r\n//                   className={\r\n//                     this.state.successful\r\n//                       ? \"alert alert-success\"\r\n//                       : \"alert alert-danger\"\r\n//                   }\r\n//                   role=\"alert\"\r\n//                 >\r\n//                   {this.state.message}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//             <CheckButton\r\n//               style={{ display: \"none\" }}\r\n//               ref={c => {\r\n//                 this.checkBtn = c;\r\n//               }}\r\n//             />\r\n//           </Form>\r\n//         </div>\r\n//       </div>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"script"}