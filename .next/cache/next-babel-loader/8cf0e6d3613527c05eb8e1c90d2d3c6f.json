{"ast":null,"code":"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport Header from '../components/header';\nimport AuthService from \"../../service/Auth.service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    });\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    });\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    });\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    });\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      // 0은 id,email,pw다 올바르게 입력했을때 , 서버보다 우선순위 먼저\n      AuthService.register( // body 역할\n      this.state.username, this.state.email, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.message);\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"card card-container\",\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n            alt: \"profile-img\",\n            className: \"profile-img-card\"\n          }), /*#__PURE__*/_jsxs(Form, {\n            onSubmit: this.handleRegister,\n            ref: c => {\n              this.form = c;\n            },\n            children: [!this.state.successful && /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"username\",\n                  value: this.state.username,\n                  onChange: this.onChangeUsername,\n                  validations: [required, vusername]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"email\",\n                  value: this.state.email,\n                  onChange: this.onChangeEmail,\n                  validations: [required, email]\n                })]\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  type: \"password\",\n                  className: \"form-control\",\n                  name: \"password\",\n                  value: this.state.password,\n                  onChange: this.onChangePassword,\n                  validations: [required, vpassword]\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsx(\"button\", {\n                  className: \"btn btn-primary btn-block\",\n                  children: \"Sign Up\"\n                })\n              })]\n            }), this.state.message && /*#__PURE__*/_jsx(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsx(\"div\", {\n                className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n                role: \"alert\",\n                children: this.state.message\n              })\n            }), /*#__PURE__*/_jsx(CheckButton, {\n              style: {\n                display: \"none\"\n              },\n              ref: c => {\n                this.checkBtn = c;\n              }\n            })]\n          })]\n        })\n      })]\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/user/Downloads/shopping-front/src/pages/register.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","Header","AuthService","required","value","email","vusername","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangeEmail","onChangePassword","state","username","password","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","render","console","log","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport Header from '../components/header'\r\nimport AuthService from \"../../service/Auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {  // 0은 id,email,pw다 올바르게 입력했을때 , 서버보다 우선순위 먼저\r\n      AuthService.register(   // body 역할\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.message);\r\n    return (\r\n      <>\r\n      <Header />\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}