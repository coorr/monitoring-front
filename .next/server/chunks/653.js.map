{"version":3,"file":"653.js","mappings":"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","sources":["webpack://aws-next-front/./src/reducers/index.js","webpack://aws-next-front/./src/store/tokenCheck.js","webpack://aws-next-front/./src/sagas/item.js","webpack://aws-next-front/./src/sagas/user.js","webpack://aws-next-front/./src/sagas/index.js","webpack://aws-next-front/./src/store/configureStore.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"; \r\nimport { combineReducers } from \"redux\";\r\nimport user from './user.js';\r\nimport item from './item.js';\r\n\r\n\r\nconst rootReducer = (state, action) => {\r\n    switch(action.type) {\r\n      case HYDRATE:\r\n        return action.payload;\r\n      default: {\r\n        const combineReducer = combineReducers({\r\n          user,\r\n          item,\r\n        })\r\n        return combineReducer(state, action);\r\n    }\r\n  }\r\n} \r\n\r\nexport default rootReducer;","import AuthService from \"../../service/user/Auth.service\";\r\nimport Router from \"next/router\";\r\n\r\nexport default function tokenCheck(state) {\r\n    if(state === 'invalid authority') {\r\n        AuthService.logout();\r\n        Router.push(\"login\")\r\n    }\r\n}","import axios from 'axios';\r\nimport { all, fork, takeLatest, delay, put,call } from 'redux-saga/effects';\r\nimport { \r\n  ADD_ITEM_FAILURE, ADD_ITEM_REQUEST, ADD_ITEM_SUCCESS, \r\n  generateDummyPost, GET_ITEM_FAILURE, GET_ITEM_REQUEST, GET_ITEM_SUCCESS, UPLOAD_IMAGE_FAILURE, UPLOAD_IMAGE_REQUEST, UPLOAD_IMAGE_SUCCESS\r\n} from '../reducers/item';\r\nimport ItemService from '../../service/item/Item.service'\r\nimport TokenCheck from '../store/tokenCheck';\r\n\r\n\r\nfunction* addItem(action) {\r\n  try {\r\n    const result =  yield ItemService.insertItemAll(action.data);\r\n    yield put({       \r\n      type: ADD_ITEM_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    TokenCheck(err.response.data)\r\n    yield put({\r\n      type: ADD_ITEM_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\nfunction* getItem(action) {\r\n  console.log(\"getItem API 호출 : \"+  action);\r\n  try {\r\n    const result =  yield ItemService.selectItemAll(action.data !== undefined ? action.data.lastId : 0 , action.data !== undefined ? action.data.size : 30);\r\n    yield put({       \r\n      type: GET_ITEM_SUCCESS, \r\n      data: result.data\r\n    }) \r\n  } catch (err) {\r\n    console.log(\"errrrrrrrrrr\" + err);\r\n    yield put({\r\n      type: GET_ITEM_FAILURE,\r\n      // error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\n\r\n\r\nfunction* watchAddItem() {\r\n  yield takeLatest(ADD_ITEM_REQUEST, addItem);\r\n}\r\nfunction* watchGetItem() {\r\n  yield takeLatest(GET_ITEM_REQUEST, getItem);\r\n}\r\n\r\n\r\nexport default function* userSage() {\r\n    yield all([\r\n      fork(watchAddItem),\r\n      fork(watchGetItem),\r\n    ])\r\n  }","import axios from 'axios';\r\nimport { all, fork, takeLatest, delay, put,call } from 'redux-saga/effects';\r\nimport { \r\n  LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n  LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n  SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAILURE, \r\n} from '../reducers/user';\r\n\r\n\r\n\r\n// function logInAPI(data) {\r\n//   return axios.post(\"/user/login\", data)\r\n// }\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result =  yield call(logInAPI, action.data);\r\n    // console.log(result);\r\n    yield put({       \r\n      type: LOG_IN_SUCCESS, \r\n      data: action.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\n\r\nfunction logOutAPI() {\r\n  // return axios.post(\"/user/logout\")\r\n}\r\nfunction* logOut() {\r\n  try {\r\n    // yield call(logOutAPI);\r\n    // yield delay(1000);\r\n    yield put({       // action을 dispatch 하는 느낌의 put\r\n      type: LOG_OUT_SUCCESS, \r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\n\r\n// function signUpAPI(data) {\r\n//   return axios.post('/user', data);\r\n// }\r\nfunction* signUp(action) {\r\n  try {\r\n    // const result =  yield call(signUpAPI, action.data);\r\n    yield put({       \r\n      type: SIGNUP_SUCCESS, \r\n      data: action.data\r\n    }) \r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGNUP_FAILURE,\r\n      error : err.response.data\r\n    })\r\n  }  \r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGNUP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSage() {\r\n    yield all([\r\n      fork(watchLogIn),\r\n      fork(watchLogOut),\r\n      fork(watchSignUp),\r\n    ])\r\n  }","import { all ,fork } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport itemSaga from './item';\r\nimport userSage from './user';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:8080/';\r\naxios.defaults.baseURL = 'http://54.180.170.84:8080/';\r\n\r\n// axios.defaults.withCredentials = true;\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(itemSaga),\r\n    fork(userSage)\r\n  ])\r\n}","import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n  console.log(action);\r\n  return next(action);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  // const middlewares = [];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares)) // 빌드용\r\n    : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = sagaMiddleware.run(rootSaga); // saga 기능\r\n  return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;\r\n"],"names":["HYDRATE","combineReducers","user","item","rootReducer","state","action","type","payload","combineReducer","AuthService","Router","tokenCheck","logout","push","axios","all","fork","takeLatest","delay","put","call","ADD_ITEM_FAILURE","ADD_ITEM_REQUEST","ADD_ITEM_SUCCESS","generateDummyPost","GET_ITEM_FAILURE","GET_ITEM_REQUEST","GET_ITEM_SUCCESS","UPLOAD_IMAGE_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","ItemService","TokenCheck","addItem","result","insertItemAll","data","err","response","error","getItem","console","log","selectItemAll","undefined","lastId","size","watchAddItem","watchGetItem","userSage","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","logIn","logOutAPI","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","itemSaga","defaults","baseURL","rootSaga","createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","loggerMiddleware","dispatch","getState","next","configureStore","sagaMiddleware","middlewares","enhancer","process","store","sagaTask","run","wrapper","debug"],"sourceRoot":""}